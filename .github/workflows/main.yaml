#The name of your workflow.
name:  Test, build and deploy a Flutter app
# Trigger the workflow on push or pull request
on: [push,pull_request]
#A workflow run is made up of one or more jobs. Jobs run in parallel by default.
jobs:
  test:
    #The type of machine to run the job on. [windows,macos, ubuntu , self-hosted]
    runs-on: macos-latest
    steps:
      # The branch or tag ref that triggered the workflow will be checked out.
      - uses: actions/checkout@v1
      # Setup a flutter environment.
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.12.14'
          channel: 'dev'
      - run: flutter pub get
      # run static analys code
      - run: flutter  analyze
      # run  flutter widgets tests and unit tests
      - run: flutter test --coverage

 # ios:
    #if conditional to prevent a job from running unnecessarily
  #  if: startsWith(github.ref, 'refs/tags/v')
   # runs-on: macos-latest
    #Identifies any jobs that must complete successfully before this job will run. 
    #needs: [test]
    #name: Build iOS
    #runs-on: macOS-latest
    #strategy:
    #  matrix:
    #    destination: ['platform=iOS Simulator,OS=13.1,name=iPad Air 2']
    #    xcode: ['/Applications/Xcode_11.1.app/Contents/Developer']
    #steps:
    #  - name: Checkout
    #    uses: actions/checkout@v1
    #    name: Install gpg
    #   run: brew install gnupg
     # - name: Setup provisioning profile
     #   env:
     #     IOS_KEYS: ${{ secrets.IOS_KEYS }}
     #   run: ./.github/secrets/decrypt_secrets.sh
     #   env:
     #     BUNDLE_GITHUB__COM: x-access-token:${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}
     # - name: Dependencies
     #   run: |
     #     carthage bootstrap --no-use-binaries --platform iOS --cache-builds
     #     bundle exec pod install
     #   env:
     #     DEVELOPER_DIR: ${{ matrix.xcode }}
     # - name: Build and test
     #   run: bundle exec fastlane scan --destination "${destination}" --scheme "YOUR_APP_SCHEME"
     #   env:
     #     destination: ${{ matrix.destination }}
     #     DEVELOPER_DIR: ${{ matrix.xcode }}
     #- name: Archive Failed Tests artifacts
     #   if: failure()
     #   uses: actions/upload-artifact@v1
     #   with:
     #     name: FailureDiff
     #     path: YouAppTests/FailureDiffs
     # - name: Releasing
     #   run: bundle exec fastlane release
     #   env:
     #     DEVELOPER_DIR: ${{ matrix.xcode }}
     #     YOUR_ENVIRONMENT_VARIABLES_HERE: ${{ secret.XXX }}#

  android_web:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: macos-latest
    #Identifies any jobs that must complete successfully before this job will run. 
    needs: [test]
    name: Build for Android and Web
    steps:
      - uses: actions/checkout@v1
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.12.14'
          channel: 'dev'
      # This action sets up a java environment
      # https://github.com/actions/setup-java
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'
      #enable macos,windows and  web
      - run: flutter  config --enable-web
      - run: flutter pub get
      - run: flutter build ios --release --no-codesign
      # build Android version
      - run: flutter build apk --debug --split-per-abi
      # This action will create a github release and optionally upload an artifact to it.
      # https://github.com/ncipollo/release-action
      - name: Create a Release APK
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/debug/*.apk,/Users/runner/runners/2.169.0/work/cityprog/cityprog/build/ios/iphoneos/*.app"
          token: ${{ secrets.GITHUB_TOKEN }}
      # build Flutter web version
      - run: flutter build web
      # Handle the deploy process of your project to GitHub Pages.
      # https://github.com/JamesIves/github-pages-deploy-action
      - uses: JamesIves/github-pages-deploy-action@3.1.5
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BASE_BRANCH: master
          BRANCH: gh-pages
          FOLDER: build/web

